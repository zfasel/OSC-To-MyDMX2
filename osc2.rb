#!/usr/bin/env ruby

require 'rubygems'
require 'ruby-osc'
require 'libusb'

include OSC

string

usb = LIBUSB::Context.new
device = usb.devices(:idVendor => 0x6244, :idProduct => 0x0451).first
device.open_interface(0) do |handle|
  puts "USB OPEN"
  handle.control_transfer(:bmRequestType => 0x40, :bRequest => 0x21, :wValue => 0x0000, :wIndex => 0x0000) #128 len
  handle.control_transfer(:bmRequestType => 0x40, :bRequest => 0x06, :wValue => 0x0002, :wIndex => 0x0000)
  handle.control_transfer(:bmRequestType => 0xc0, :bRequest => 0x21, :wValue => 0x0000, :wIndex => 0x0001)
  handle.bulk_transfer(:endpoint => 0x02, :dataOut => ([string].pack('H*')))


  OSC.run do
    server = Server.new 4531

    server.add_pattern %r{dmx/.*} do |*args| # this will match any /dmx node
      level = "%02X" % (args[1]*255).to_i
      pos = (args[0].split('/')[3].to_i * 2)
      string[pos,2] = level
      handle.control_transfer(:bmRequestType => 0xc0, :bRequest => 0x21, :wValue => 0x0000, :wIndex => 0x0001)
      handle.bulk_transfer(:endpoint => 0x02, :dataOut => [string].pack('H*'))
    end

  end
end
